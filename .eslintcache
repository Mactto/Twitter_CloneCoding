[{"C:\\Users\\mactt\\OneDrive\\바탕 화면\\Git\\Twitter_CloneCoding\\src\\index.js":"1","C:\\Users\\mactt\\OneDrive\\바탕 화면\\Git\\Twitter_CloneCoding\\src\\firebase.js":"2","C:\\Users\\mactt\\OneDrive\\바탕 화면\\Git\\Twitter_CloneCoding\\src\\components\\App.js":"3","C:\\Users\\mactt\\OneDrive\\바탕 화면\\Git\\Twitter_CloneCoding\\src\\components\\Router.js":"4","C:\\Users\\mactt\\OneDrive\\바탕 화면\\Git\\Twitter_CloneCoding\\src\\routes\\Home.js":"5","C:\\Users\\mactt\\OneDrive\\바탕 화면\\Git\\Twitter_CloneCoding\\src\\routes\\Auth.js":"6"},{"size":219,"mtime":1608443122648,"results":"7","hashOfConfig":"8"},{"size":541,"mtime":1608443056348,"results":"9","hashOfConfig":"8"},{"size":369,"mtime":1608443263985,"results":"10","hashOfConfig":"8"},{"size":722,"mtime":1608442083310,"results":"11","hashOfConfig":"8"},{"size":89,"mtime":1608403660748,"results":"12","hashOfConfig":"8"},{"size":1600,"mtime":1608448862722,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"tjjtqs",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"16"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24","usedDeprecatedRules":"16"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29"},"C:\\Users\\mactt\\OneDrive\\바탕 화면\\Git\\Twitter_CloneCoding\\src\\index.js",[],["30","31"],"C:\\Users\\mactt\\OneDrive\\바탕 화면\\Git\\Twitter_CloneCoding\\src\\firebase.js",[],"C:\\Users\\mactt\\OneDrive\\바탕 화면\\Git\\Twitter_CloneCoding\\src\\components\\App.js",["32"],"import React, {useState} from 'react';\nimport AppRouter from './Router';\nimport {authService} from \"../firebase\";\n\nfunction App() {\n  const [isLoggedIn, setIsLoggedIn] = useState(authService.currentUser);\n  \n  return (\n    <>\n      <AppRouter isLoggedIn={isLoggedIn} />\n      <footer>&copy; Nwitter {new Date().getFullYear()}</footer>\n    </>\n  )\n}\n\nexport default App;","C:\\Users\\mactt\\OneDrive\\바탕 화면\\Git\\Twitter_CloneCoding\\src\\components\\Router.js",["33"],"import React, {useState} from 'react';\r\nimport {HashRouter as Router, Route, Switch} from 'react-router-dom';\r\nimport Auth from '../routes/Auth';\r\nimport Home from '../routes/Home';\r\n\r\nconst AppRouter = ({isLoggedIn}) => {\r\n    return (\r\n        <Router>\r\n            <Switch>\r\n                {isLoggedIn ? \r\n                <>\r\n                    <Route exact path=\"/\">\r\n                        <Home />\r\n                    </Route>\r\n                </>\r\n                :\r\n                (\r\n                    <Route exact path=\"/\">\r\n                        <Auth />\r\n                    </Route>\r\n                )\r\n                }\r\n            </Switch>\r\n        </Router>\r\n    )\r\n}\r\n\r\nexport default AppRouter;","C:\\Users\\mactt\\OneDrive\\바탕 화면\\Git\\Twitter_CloneCoding\\src\\routes\\Home.js",[],"C:\\Users\\mactt\\OneDrive\\바탕 화면\\Git\\Twitter_CloneCoding\\src\\routes\\Auth.js",["34","35"],"import React, {useState} from \"react\";\r\nimport { authService } from \"../firebase\";\r\n\r\nconst Auth = () => {\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [newAccount, setNewAccount] = useState(true);\r\n\r\n    const onChange = (e) => {\r\n        const {target: {name, value}} = e;\r\n        if (name === \"email\") {\r\n            setEmail(e.currentTarget.value);\r\n        } else if (name === \"password\") {\r\n            setPassword(e.currentTarget.value);\r\n        }\r\n    }\r\n    const onSubmit = async(e) => {\r\n        e.preventDefault();\r\n        let data;\r\n        try {\r\n            if (newAccount) {\r\n                data = await authService.createUserWithEmailAndPassword(email, password);\r\n            } else {\r\n                data = await authService.signInWithEmailAndPassword(email, password);\r\n            }\r\n            console.log(data);\r\n        } catch(err) {\r\n            console.log(err);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <form onSubmit={onSubmit}>\r\n                <input name=\"email\" type=\"text\" placeholder=\"Email\" required value={email} onChange={onChange}/>\r\n                <input name=\"password\" type=\"password\" placeholder=\"Password\" required value={password} onChange={onChange}/>\r\n                <input type=\"submit\" value={newAccount ? \"Create Account\" : \"Log In\"} />\r\n            </form>\r\n            <div>\r\n                <button>Continue with Google</button>\r\n                <button>Continue with Github</button>\r\n            </div>\r\n        </div>   \r\n    )\r\n}\r\n\r\nexport default Auth;",{"ruleId":"36","replacedBy":"37"},{"ruleId":"38","replacedBy":"39"},{"ruleId":"40","severity":1,"message":"41","line":6,"column":22,"nodeType":"42","messageId":"43","endLine":6,"endColumn":35},{"ruleId":"40","severity":1,"message":"44","line":1,"column":16,"nodeType":"42","messageId":"43","endLine":1,"endColumn":24},{"ruleId":"40","severity":1,"message":"45","line":7,"column":24,"nodeType":"42","messageId":"43","endLine":7,"endColumn":37},{"ruleId":"40","severity":1,"message":"46","line":10,"column":31,"nodeType":"42","messageId":"43","endLine":10,"endColumn":36},"no-native-reassign",["47"],"no-negated-in-lhs",["48"],"no-unused-vars","'setIsLoggedIn' is assigned a value but never used.","Identifier","unusedVar","'useState' is defined but never used.","'setNewAccount' is assigned a value but never used.","'value' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]