[{"C:\\Users\\mactt\\OneDrive\\바탕 화면\\Git\\Twitter_CloneCoding\\src\\index.js":"1","C:\\Users\\mactt\\OneDrive\\바탕 화면\\Git\\Twitter_CloneCoding\\src\\firebase.js":"2","C:\\Users\\mactt\\OneDrive\\바탕 화면\\Git\\Twitter_CloneCoding\\src\\components\\App.js":"3","C:\\Users\\mactt\\OneDrive\\바탕 화면\\Git\\Twitter_CloneCoding\\src\\components\\Router.js":"4","C:\\Users\\mactt\\OneDrive\\바탕 화면\\Git\\Twitter_CloneCoding\\src\\routes\\Home.js":"5","C:\\Users\\mactt\\OneDrive\\바탕 화면\\Git\\Twitter_CloneCoding\\src\\routes\\Auth.js":"6"},{"size":219,"mtime":1608443122648,"results":"7","hashOfConfig":"8"},{"size":541,"mtime":1608443056348,"results":"9","hashOfConfig":"8"},{"size":637,"mtime":1608452849128,"results":"10","hashOfConfig":"8"},{"size":722,"mtime":1608442083310,"results":"11","hashOfConfig":"8"},{"size":89,"mtime":1608403660748,"results":"12","hashOfConfig":"8"},{"size":1828,"mtime":1608453103732,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"tjjtqs",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"16"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28"},"C:\\Users\\mactt\\OneDrive\\바탕 화면\\Git\\Twitter_CloneCoding\\src\\index.js",[],["29","30"],"C:\\Users\\mactt\\OneDrive\\바탕 화면\\Git\\Twitter_CloneCoding\\src\\firebase.js",[],"C:\\Users\\mactt\\OneDrive\\바탕 화면\\Git\\Twitter_CloneCoding\\src\\components\\App.js",[],"C:\\Users\\mactt\\OneDrive\\바탕 화면\\Git\\Twitter_CloneCoding\\src\\components\\Router.js",["31"],"import React, {useState} from 'react';\r\nimport {HashRouter as Router, Route, Switch} from 'react-router-dom';\r\nimport Auth from '../routes/Auth';\r\nimport Home from '../routes/Home';\r\n\r\nconst AppRouter = ({isLoggedIn}) => {\r\n    return (\r\n        <Router>\r\n            <Switch>\r\n                {isLoggedIn ? \r\n                <>\r\n                    <Route exact path=\"/\">\r\n                        <Home />\r\n                    </Route>\r\n                </>\r\n                :\r\n                (\r\n                    <Route exact path=\"/\">\r\n                        <Auth />\r\n                    </Route>\r\n                )\r\n                }\r\n            </Switch>\r\n        </Router>\r\n    )\r\n}\r\n\r\nexport default AppRouter;","C:\\Users\\mactt\\OneDrive\\바탕 화면\\Git\\Twitter_CloneCoding\\src\\routes\\Home.js",[],"C:\\Users\\mactt\\OneDrive\\바탕 화면\\Git\\Twitter_CloneCoding\\src\\routes\\Auth.js",["32"],"import React, {useState} from \"react\";\r\nimport { authService } from \"../firebase\";\r\n\r\nconst Auth = () => {\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [newAccount, setNewAccount] = useState(true);\r\n    const [error, setError] = useState(\"\");\r\n\r\n    const onChange = (e) => {\r\n        const {target: {name, value}} = e;\r\n        if (name === \"email\") {\r\n            setEmail(e.currentTarget.value);\r\n        } else if (name === \"password\") {\r\n            setPassword(e.currentTarget.value);\r\n        }\r\n    }\r\n    const onSubmit = async(e) => {\r\n        e.preventDefault();\r\n        let data;\r\n        try {\r\n            if (newAccount) {\r\n                data = await authService.createUserWithEmailAndPassword(email, password);\r\n            } else {\r\n                data = await authService.signInWithEmailAndPassword(email, password);\r\n            }\r\n            console.log(data);\r\n        } catch(err) {\r\n            setError(err.message);\r\n        }\r\n    }\r\n\r\n    const toggleAccount = () => setNewAccount(prev => !prev)\r\n\r\n    return (\r\n        <div>\r\n            <form onSubmit={onSubmit}>\r\n                <input name=\"email\" type=\"text\" placeholder=\"Email\" required value={email} onChange={onChange}/>\r\n                <input name=\"password\" type=\"password\" placeholder=\"Password\" required value={password} onChange={onChange}/>\r\n                <input type=\"submit\" value={newAccount ? \"Create Account\" : \"Log In\"} />\r\n            </form>\r\n            <span onClick={toggleAccount}>{newAccount ? \"Log in\" : \"Create Account\"}</span>\r\n            <div>\r\n                <button>Continue with Google</button>\r\n                <button>Continue with Github</button>\r\n            </div>\r\n            {error}\r\n        </div>   \r\n    )\r\n}\r\n\r\nexport default Auth;",{"ruleId":"33","replacedBy":"34"},{"ruleId":"35","replacedBy":"36"},{"ruleId":"37","severity":1,"message":"38","line":1,"column":16,"nodeType":"39","messageId":"40","endLine":1,"endColumn":24},{"ruleId":"37","severity":1,"message":"41","line":11,"column":31,"nodeType":"39","messageId":"40","endLine":11,"endColumn":36},"no-native-reassign",["42"],"no-negated-in-lhs",["43"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'value' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]